BROKER SCHEMA mx.profuturo.archivo.doimss

DECLARE doimssEstado SHARED ROW;

CREATE COMPUTE MODULE doimss_estructura
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE linea CHARACTER InputRoot.DFDL.doimssLine.body.body_elem1;
		DECLARE numLinea INTEGER InputLocalEnvironment.File.Record;
		
		DECLARE estado INTEGER 0;
		DECLARE lineaValida BOOLEAN TRUE;
		
		SET OutputRoot.XMLNSC.linea.valor = linea;
		SET OutputRoot.XMLNSC.linea.estado = estado;
		SET OutputRoot.XMLNSC.linea.valida = FALSE;
		SET OutputRoot.XMLNSC.linea.timestamp = CURRENT_TIMESTAMP;
		
		IF InputLocalEnvironment.File.Record = 1 THEN
			SET doimssEstado.estado = NULL;
		END IF;
		
		IF FIELDTYPE(doimssEstado.estado) IS NOT NULL THEN
			SET estado = doimssEstado.estado;
		END IF;
		
		IF validarLongitud(linea, 450) THEN
			IF validarNoVacio(linea) THEN
				DECLARE idLinea CHARACTER getValorLinea(linea, 1, 2);
				DECLARE estadoSiguiente INTEGER getEstado(estado, idLinea);
				
				IF estadoSiguiente <> -1 THEN
					SET doimssEstado.estado = estadoSiguiente;
					SET OutputRoot.XMLNSC.linea.estado = estadoSiguiente;
					SET OutputRoot.XMLNSC.linea.valida = TRUE;
					
					--VALIDAR CONTENIDO
					DECLARE camposLinea ROW;
					CALL separarCampos(idLinea, linea, camposLinea);
					CALL validarContenido(idLinea, camposLinea);
					DECLARE numErrores INTEGER CARDINALITY(SELECT T FROM camposLinea.[] as T WHERE camposLinea.valido = FALSE);
					IF numErrores > 0 THEN
						SET OutputRoot.XMLNSC.linea.valida = FALSE;
						SET OutputRoot.XMLNSC.linea.error = 'CONTENIDO';
					END IF; 
				ELSE
					--ERROR ESTRUCTURA
					SET doimssEstado.estado = estado;
					SET OutputRoot.XMLNSC.linea.estado = estado;
					SET OutputRoot.XMLNSC.linea.valida = FALSE;
					SET OutputRoot.XMLNSC.linea.error = 'ESTRUCTURA';
				END IF;
			END IF;
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;

CREATE FUNCTION getValorLinea(IN linea CHARACTER, IN posIni INTEGER, IN posFin INTEGER) RETURNS CHARACTER
BEGIN
	RETURN SUBSTRING(linea FROM posIni FOR posFin);
END;

CREATE FUNCTION getEstado(IN estadoActual INTEGER, IN idLinea CHARACTER) RETURNS INTEGER
BEGIN
	DECLARE tablaEstados ROW;
	DECLARE estadoSiguiente INTEGER -1;
	
	SET tablaEstados.estado[1].estado_actual = 0;
	SET tablaEstados.estado[1].id_linea = '01';
	SET tablaEstados.estado[1].estado_siguiente = 1;
	
	SET tablaEstados.estado[2].estado_actual = 1;
	SET tablaEstados.estado[2].id_linea = '02';
	SET tablaEstados.estado[2].estado_siguiente = 2;
	
	SET tablaEstados.estado[3].estado_actual = 2;
	SET tablaEstados.estado[3].id_linea = '02';
	SET tablaEstados.estado[3].estado_siguiente = 2;

	SET tablaEstados.estado[4].estado_actual = 2;
	SET tablaEstados.estado[4].id_linea = '08';
	SET tablaEstados.estado[4].estado_siguiente = 3;
	
	SET tablaEstados.estado[5].estado_actual = 3;
	SET tablaEstados.estado[5].id_linea = '08';
	SET tablaEstados.estado[5].estado_siguiente = 3;
	
	SET tablaEstados.estado[6].estado_actual = 3;
	SET tablaEstados.estado[6].id_linea = '09';
	SET tablaEstados.estado[6].estado_siguiente = 4;
	
	SET tablaEstados.estadoActual.estado[] = SELECT T FROM tablaEstados.estado[] AS T WHERE T.estado_actual = estadoActual AND T.id_linea = idLinea;
	
	IF FIELDTYPE(tablaEstados.estadoActual.estado) IS NOT NULL THEN
		SET estadoSiguiente = tablaEstados.estadoActual.estado[1].estado_siguiente;
		SET tablaEstados.estadoActual = NULL;
	END IF;

	RETURN estadoSiguiente;
END;

CREATE FUNCTION validarLongitud (IN linea CHARACTER, IN size INTEGER) RETURNS BOOLEAN
BEGIN
	DECLARE valido BOOLEAN FALSE;
	DECLARE longitud INTEGER LENGTH(linea); 
	IF longitud = size THEN
		SET valido = TRUE;
	END IF;
	
	RETURN valido;
END;

CREATE FUNCTION validarNoVacio (IN linea CHARACTER) RETURNS BOOLEAN
BEGIN
	DECLARE valido BOOLEAN FALSE;
	
	IF TRIM(linea) <> '' THEN
		SET valido = TRUE;
	END IF;
	
	RETURN valido;
END;

CREATE PROCEDURE separarCampos(IN idLinea CHARACTER, IN linea CHARACTER, IN campos REFERENCE)
BEGIN
	CASE idLinea
		WHEN '01' THEN
			SET campos.IDENTIFICADOR_DEL_SERVICIO_ENCABEZADO.valor = SUBSTRING(linea FROM 3 FOR 2);
			SET campos.IDENTIFICADOR_DE_OPERACION_ENCABEZADO.valor = SUBSTRING(linea FROM 5 FOR 2);
			SET campos.TIPO_ENTIDAD_ORIGEN_ENCABEZADO.valor = SUBSTRING(linea FROM 7 FOR 2);
			SET campos.CLAVE_ENTIDAD_ORIGEN_ENCABEZADO.valor = SUBSTRING(linea FROM 9 FOR 3);
			SET campos.TIPO_ENTIDAD_DESTINO_ENCABEZADO.valor = SUBSTRING(linea FROM 12 FOR 2);
			SET campos.CLAVE_ENTIDAD_DESTINO_ENCABEZADO.valor = SUBSTRING(linea FROM 14 FOR 3);
			SET campos.FECHA_DE_CREACION_DEL_LOTE_ENCABEZADO.valor = SUBSTRING(linea FROM 17 FOR 8);
			SET campos.CONSECUTIVO_DEL_DIA_ENCABEZADO.valor = SUBSTRING(linea FROM 25 FOR 3);
			SET campos.MODALIDAD_DE_RECEPCION_ENVIO_DEL_ARCHIVO_ENCABEZADO.valor = SUBSTRING(linea FROM 28 FOR 2);
			SET campos.FECHA_LIMITE_DE_RESPUESTA_ENCABEZADO.valor = SUBSTRING(linea FROM 30 FOR 8);
			SET campos.RESULTADO_DE_LA_OPERACION_ENCABEZADO.valor = SUBSTRING(linea FROM 38 FOR 2);
			SET campos.DIAGNOSTICO_1_ENCABEZADO.valor = SUBSTRING(linea FROM 40 FOR 3);
			SET campos.DIAGNOSTICO_2_ENCABEZADO.valor = SUBSTRING(linea FROM 43 FOR 3);
			SET campos.DIAGNOSTICO_3_ENCABEZADO.valor = SUBSTRING(linea FROM 46 FOR 3);
			SET campos.FILLER1_ENCABEZADO.valor = SUBSTRING(linea FROM 49 FOR 271);
			SET campos.IDENTIFICADOR_NOMBRE_DE_ARCHIVO_ENCABEZADO.valor = SUBSTRING(linea FROM 320 FOR 1);
			SET campos.FILLER2_ENCABEZADO.valor = SUBSTRING(linea FROM 321 FOR 130);
		WHEN '02' THEN
			SET campos.IDENTIFICADOR_DEL_SERVICIO_DETALLE.valor = SUBSTRING(linea FROM 3 FOR 2);
			SET campos.CONSECUTIVO_DE_REGISTRO_DENTRO_DEL_LOTE_DETALLE.valor = SUBSTRING(linea FROM 5 FOR 8);
			SET campos.NSS_TRABAJADOR_DETALLE.valor = SUBSTRING(linea FROM 13 FOR 11);
			SET campos.RFC_TRABAJADOR_DETALLE.valor = SUBSTRING(linea FROM 24 FOR 13);
			SET campos.CURP_TRABAJADOR_DETALLE.valor = SUBSTRING(linea FROM 37 FOR 18);
			SET campos.NOMBRE_DETALLE.valor = SUBSTRING(linea FROM 55 FOR 50);
			SET campos.PERIODO_DE_PAGO_QUE_ESTA_ENTERANDO_EL_PATRON_DETALLE.valor = SUBSTRING(linea FROM 105 FOR 6);
			SET campos.FECHA_DE_PAGO_DETALLE.valor = SUBSTRING(linea FROM 111 FOR 8);
			SET campos.FECHA_VALOR_RCV_DETALLE.valor = SUBSTRING(linea FROM 119 FOR 8);
			SET campos.FECHA_VALOR_CUATRO_SEGUROS_IMSS_ACV_Y_VIVIENDA_DETALLE.valor = SUBSTRING(linea FROM 127 FOR 8);
			SET campos.ULTIMO_SALARIO_DIARIO_INTEGRADO_DEL_PERIODO_DETALLE.valor = SUBSTRING(linea FROM 135 FOR 7);
			SET campos.FOLIO_DE_PAGO_SUA_DETALLE.valor = SUBSTRING(linea FROM 142 FOR 6);
			SET campos.REGISTRO_PATRONAL_IMSS_NRP_DETALLE.valor = SUBSTRING(linea FROM 148 FOR 11);
			SET campos.REGISTRO_FEDERAL_DE_CONTRIBUYENTES_DEL_PATRON_RFC_DETALLE.valor = SUBSTRING(linea FROM 159 FOR 13);
			SET campos.CLAVE_DE_ENTIDAD_RECEPTORA_DETALLE.valor = SUBSTRING(linea FROM 172 FOR 3);
			SET campos.DIAS_COTIZADOS_EN_EL_BIMESTRE_DETALLE.valor = SUBSTRING(linea FROM 175 FOR 2);
			SET campos.DIAS_DE_INCAPACIDAD_EN_EL_BIMESTRE_DETALLE.valor = SUBSTRING(linea FROM 177 FOR 2);
			SET campos.DIAS_DE_AUSENTISMO_EN_EL_BIMESTRE_DETALLE.valor = SUBSTRING(linea FROM 179 FOR 2);
			SET campos.IMPORTE_RETIRO_DETALLE.valor = SUBSTRING(linea FROM 181 FOR 7);
			SET campos.IMPORTE_ACTUALIZACION_Y_RECARGOS_DE_RETIRO_DETALLE.valor = SUBSTRING(linea FROM 188 FOR 7);
			SET campos.IMPORTE_CESANTIA_Y_VEJEZ_DETALLE.valor = SUBSTRING(linea FROM 195 FOR 7);
			SET campos.IMPORTE_ACTUALIZACION_Y_RECARGOS_DE_CESANTIA_Y_VEJEZ_DETALLE.valor = SUBSTRING(linea FROM 202 FOR 7);
			SET campos.IMPORTE_APORTACION_VOLUNTARIA_DETALLE.valor = SUBSTRING(linea FROM 209 FOR 7);
			SET campos.IMPORTE_APORTACION_COMPLEMENTARIA_DE_RETIRO_DETALLE.valor = SUBSTRING(linea FROM 216 FOR 7);
			SET campos.IMPORTE_APORTACION_PATRONAL_DETALLE.valor = SUBSTRING(linea FROM 223 FOR 7);
			SET campos.IMPORTE_CUOTA_SOCIAL_DETALLE.valor = SUBSTRING(linea FROM 230 FOR 7);
			SET campos.IMPORTE_APORTACION_ESTATAL_DETALLE.valor = SUBSTRING(linea FROM 237 FOR 7);
			SET campos.IMPORTE_APORTACION_ESPECIAL_DETALLE.valor = SUBSTRING(linea FROM 244 FOR 7);
			SET campos.IMPORTE_ACTUALIZACIONES_CUOTA_SOCIAL_DETALLE.valor = SUBSTRING(linea FROM 251 FOR 7);
			SET campos.IMPORTE_ACTUALIZACIONES_APORTACION_ESTATAL_DETALLE.valor = SUBSTRING(linea FROM 258 FOR 7);
			SET campos.IMPORTE_ACTUALIZACIONES_CUOTA_ESPECIAL_DETALLE.valor = SUBSTRING(linea FROM 265 FOR 7);
			SET campos.FECHA_DE_PAGO_CUOTAS_GUBERNAMENTALES_DETALLE.valor = SUBSTRING(linea FROM 272 FOR 8);
			SET campos.IDENTIFICADOR_DE_VIVIENDA_EN_GARANTIA_DETALLE.valor = SUBSTRING(linea FROM 280 FOR 1);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DETALLE.valor = SUBSTRING(linea FROM 281 FOR 15);
			SET campos.VALOR_DE_LA_APLICACION_DE_INTERESES_DE_VIVIENDA_DETALLE.valor = SUBSTRING(linea FROM 296 FOR 11);
			SET campos.IMPORTE_DEL_REMANENTE_DE_VIVIENDA_DETALLE.valor = SUBSTRING(linea FROM 307 FOR 7);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_REMANENTE_DETALLE.valor = SUBSTRING(linea FROM 314 FOR 15);
			SET campos.INTERESES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_DETALLE.valor = SUBSTRING(linea FROM 329 FOR 7);
			SET campos.APLICACION_DE_INTERESES_DE_VIVIENDA_POR_PAGOS_EXTEMPORANEOS_DETALLE.valor = SUBSTRING(linea FROM 336 FOR 15);
			SET campos.IMPORTE_DE_APORTACIONES_A_LARGO_PLAZO_DETALLE.valor = SUBSTRING(linea FROM 351 FOR 7);
			SET campos.IMPORTE_DE_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_DETALLE.valor = SUBSTRING(linea FROM 358 FOR 7);
			SET campos.MOTIVO_DE_LIBERACION_DE_APORTACIONES_DETALLE.valor = SUBSTRING(linea FROM 365 FOR 2);
			SET campos.FILLER_DETALLE.valor = SUBSTRING(linea FROM 367 FOR 73);
			SET campos.RESULTADO_DE_LA_OPERACION_DETALLE.valor = SUBSTRING(linea FROM 440 FOR 2);
			SET campos.DIAGNOSTICO_1_DETALLE.valor = SUBSTRING(linea FROM 442 FOR 3);
			SET campos.DIAGNOSTICO_2_DETALLE.valor = SUBSTRING(linea FROM 445 FOR 3);
			SET campos.DIAGNOSTICO_3_DETALLE.valor = SUBSTRING(linea FROM 448 FOR 3);
		WHEN '08' THEN
			SET campos.IDENTIFICADOR_DEL_SERVICIO_CUENTAS.valor = SUBSTRING(linea FROM 3 FOR 2);
			SET campos.IDENTIFICADOR_DE_PAGO_CUENTAS.valor = SUBSTRING(linea FROM 5 FOR 16);
			SET campos.IMPORTE_CUENTAS.valor = SUBSTRING(linea FROM 21 FOR 15);
			SET campos.FECHA_DE_LIQUIDACION_CUENTAS.valor = SUBSTRING(linea FROM 36 FOR 8);
			SET campos.IMPORTE_APORTACIONES_ACEPTADAS_CUENTAS.valor = SUBSTRING(linea FROM 44 FOR 15);
			SET campos.IMPORTE_APORTACIONES_DEVUELTAS_CUENTAS.valor = SUBSTRING(linea FROM 59 FOR 15);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_CUENTAS.valor = SUBSTRING(linea FROM 74 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_CUENTAS.valor = SUBSTRING(linea FROM 92 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_CUENTAS.valor = SUBSTRING(linea FROM 110 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS.valor = SUBSTRING(linea FROM 128 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS.valor = SUBSTRING(linea FROM 146 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS.valor = SUBSTRING(linea FROM 164 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS.valor = SUBSTRING(linea FROM 182 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS.valor = SUBSTRING(linea FROM 200 FOR 18);
			SET campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS.valor = SUBSTRING(linea FROM 218 FOR 18);
			SET campos.IDENTIFICADOR_DE_SIEFORE_CUENTAS.valor = SUBSTRING(linea FROM 236 FOR 8);
			SET campos.TIPO_DE_SIEFORE_CUENTAS.valor = SUBSTRING(linea FROM 244 FOR 3);
			SET campos.RESULTADO_DE_LA_OPERACION_CUENTAS.valor = SUBSTRING(linea FROM 247 FOR 2);
			SET campos.DIAGNOSTICO_1_CUENTAS.valor = SUBSTRING(linea FROM 249 FOR 3);
			SET campos.DIAGNOSTICO_2_CUENTAS.valor = SUBSTRING(linea FROM 252 FOR 3);
			SET campos.DIAGNOSTICO_3_CUENTAS.valor = SUBSTRING(linea FROM 255 FOR 3);
			SET campos.FILLER_CUENTAS.valor = SUBSTRING(linea FROM 258 FOR 193);
		WHEN '09' THEN
			SET campos.IDENTIFICADOR_DEL_SERVICIO_SUMARIO.valor = SUBSTRING(linea FROM 3 FOR 2);
			SET campos.IDENTIFICADOR_DE_OPERACION_SUMARIO.valor = SUBSTRING(linea FROM 5 FOR 2);
			SET campos.TIPO_ENTIDAD_ORIGEN_SUMARIO.valor = SUBSTRING(linea FROM 7 FOR 2);
			SET campos.CLAVE_ENTIDAD_ORIGEN_SUMARIO.valor = SUBSTRING(linea FROM 9 FOR 3);
			SET campos.TIPO_ENTIDAD_DESTINO_SUMARIO.valor = SUBSTRING(linea FROM 12 FOR 2);
			SET campos.CLAVE_ENTIDAD_DESTINO_SUMARIO.valor = SUBSTRING(linea FROM 14 FOR 3);
			SET campos.FECHA_DE_CREACION_DE_LOTE_SUMARIO.valor = SUBSTRING(linea FROM 17 FOR 8);
			SET campos.CONSECUTIVO_DEL_DIA_SUMARIO.valor = SUBSTRING(linea FROM 25 FOR 3);
			SET campos.IMPORTE_TOTAL_RCV_SUMARIO.valor = SUBSTRING(linea FROM 28 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_RCV_SUMARIO.valor = SUBSTRING(linea FROM 43 FOR 15);
			SET campos.IMPORTE_TOTAL_APORTACIONES_VOLUNTARIAS_SUMARIO.valor = SUBSTRING(linea FROM 58 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_VOLUNTARIAS_SUMARIO.valor = SUBSTRING(linea FROM 73 FOR 15);
			SET campos.IMPORTE_TOTAL_APORTACIONES_COMPLEMENTARIAS_DE_RETIRO_SUMARIO.valor = SUBSTRING(linea FROM 88 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_COMPLEMENTARIAS_DE_RETIRO_SUMARIO.valor = SUBSTRING(linea FROM 103 FOR 15);
			SET campos.IMPORTE_TOTAL_APORTACIONES_A_LARGO_PLAZO_SUMARIO.valor = SUBSTRING(linea FROM 118 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_A_LARGO_PLAZO_SUMARIO.valor = SUBSTRING(linea FROM 133 FOR 15);
			SET campos.IMPORTE_TOTAL_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_SUMARIO.valor = SUBSTRING(linea FROM 148 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_SUMARIO.valor = SUBSTRING(linea FROM 163 FOR 15);
			SET campos.IMPORTE_TOTAL_APORTACION_PATRONAL_5_SUMARIO.valor = SUBSTRING(linea FROM 178 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_APORTACION_PATRONAL_5_SUMARIO.valor = SUBSTRING(linea FROM 193 FOR 15);
			SET campos.IMPORTE_TOTAL_CUOTAS_GUBERNAMENTALES_SUMARIO.valor = SUBSTRING(linea FROM 208 FOR 15);
			SET campos.IMPORTE_TOTAL_INTERESES_CUOTAS_GUBERNAMENTALES_SUMARIO.valor = SUBSTRING(linea FROM 223 FOR 15);
			SET campos.NUMERO_DE_REGISTROS_APORTACIONES_SUMARIO.valor = SUBSTRING(linea FROM 238 FOR 8);
			SET campos.NUMERO_DE_REGISTROS_DE_CUENTAS_POR_PAGAR_SUMARIO.valor = SUBSTRING(linea FROM 246 FOR 6);
			SET campos.IMPORTE_TOTAL_CUENTA_POR_PAGAR_SUMARIO.valor = SUBSTRING(linea FROM 252 FOR 15);
			SET campos.IMPORTE_TOTAL_DE_VIVIENDA_EN_GARANTIA_SUMARIO.valor = SUBSTRING(linea FROM 267 FOR 15);
			SET campos.IMPORTE_TOTAL_DE_INTERESES_DE_VIVIENDA_EN_GARANTIA_SUMARIO.valor = SUBSTRING(linea FROM 282 FOR 15);
			SET campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_DE_APORTACION_PATRONAL_5_SUMARIO.valor = SUBSTRING(linea FROM 297 FOR 18);
			SET campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_EN_GARANTIA_SUMARIO.valor = SUBSTRING(linea FROM 315 FOR 18);
			SET campos.IMPORTE_TOTAL_POR_CONCEPTO_DEL_REMANENTE_DE_VIVIENDA_SUMARIO.valor = SUBSTRING(linea FROM 333 FOR 15);
			SET campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_REMANENTE_SUMARIO.valor = SUBSTRING(linea FROM 348 FOR 18);
			SET campos.TOTAL_INTERESES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_SUMARIO.valor = SUBSTRING(linea FROM 366 FOR 15);
			SET campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_PAGOS_EXTEMPORANEOS_SUMARIO.valor = SUBSTRING(linea FROM 381 FOR 18);
			SET campos.TOTAL_INTERESES_EN_ACLARACIONES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_SUMARIO.valor = SUBSTRING(linea FROM 399 FOR 15);
			SET campos.FILLER_SUMARIO.valor = SUBSTRING(linea FROM 414 FOR 37);
	END CASE;
END;

CREATE PROCEDURE compararValor(IN campo REFERENCE, IN valor CHARACTER)
BEGIN
	IF campo.valor = valor THEN
		SET campo.valido = TRUE;
	ELSE
		SET campo.valido = FALSE;
	END IF;
END;

CREATE PROCEDURE compararListaValores(IN campo REFERENCE, IN listaValores REFERENCE)
BEGIN
	
	DECLARE existeValor BOOLEAN EXISTS(SELECT T.* FROM listaValores.lista.OPC[] AS T WHERE T = campo.valor);
	
	SET campo.valido = existeValor;
END;

CREATE PROCEDURE validarEspacios(IN campo REFERENCE, IN existenEspacios BOOLEAN)
BEGIN
	DECLARE valor CHARACTER TRIM(campo.valor);
	IF existenEspacios THEN
		IF valor = '' THEN
			SET campo.valido = TRUE;
		ELSE
			SET campo.valido = FALSE;
		END IF;
	ELSE
		IF valor = '' THEN
			SET campo.valido = FALSE;
		ELSE
			SET campo.valido = TRUE;
		END IF;
	END IF;
END;

CREATE PROCEDURE validarNumericoValor(IN campo REFERENCE, IN valor CHARACTER, IN operador CHARACTER)
BEGIN
	DECLARE CONTINUE HANDLER FOR SQLSTATE LIKE'%'
	BEGIN
		SET campo.valido = FALSE;
	END;

	SET campo.valido = TRUE;
	DECLARE valorNum INTEGER CAST(campo.valor AS INTEGER);

	IF operador IS NOT NULL THEN
		DECLARE valorComparar INTEGER 0;
		SET valorComparar = CAST(valor AS INTEGER);
		CASE operador
			WHEN '>' THEN
				IF valorNum <= valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '>=' THEN
				IF valorNum < valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<' THEN
				IF valorNum >= valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<=' THEN
				IF valorNum > valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '=' THEN
				IF valorNum <> valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<>' THEN
				IF valorNum = valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
		END CASE;
	END IF;
END;

CREATE PROCEDURE validarFechaValor(IN campo REFERENCE, IN fechaFormato CHARACTER, IN valor CHARACTER, IN operador CHARACTER)
BEGIN
	DECLARE CONTINUE HANDLER FOR SQLSTATE LIKE'%'
	BEGIN
		SET campo.valido = FALSE;
	END;

	SET campo.valido = TRUE;
	DECLARE fecha DATE CAST(campo.valor AS  DATE FORMAT fechaFormato);


	IF operador IS NOT NULL THEN
		DECLARE valorComparar DATE CAST(valor AS DATE FORMAT fechaFormato);
		CASE operador
			WHEN '>' THEN
				IF fecha <= valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '>=' THEN
				IF fecha < valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<' THEN
				IF fecha >= valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<=' THEN
				IF fecha > valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '=' THEN
				IF fecha <> valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
			WHEN '<>' THEN
				IF fecha = valorComparar THEN
					SET campo.valido = FALSE;
				END IF;
		END CASE;
	END IF;
END;

CREATE PROCEDURE validarContenido(IN idLinea CHARACTER, IN campos REFERENCE)
BEGIN
	CASE idLinea
		WHEN '01' THEN
			CALL compararValor(campos.IDENTIFICADOR_DEL_SERVICIO_ENCABEZADO, '03');
			CALL compararValor(campos.IDENTIFICADOR_DE_OPERACION_ENCABEZADO, '10');
			CALL compararValor(campos.TIPO_ENTIDAD_ORIGEN_ENCABEZADO, '03');
			CALL compararValor(campos.CLAVE_ENTIDAD_ORIGEN_ENCABEZADO, '001');
			CALL compararValor(campos.TIPO_ENTIDAD_DESTINO_ENCABEZADO, '01');
			CALL compararValor(campos.CLAVE_ENTIDAD_DESTINO_ENCABEZADO, '534');
			CALL validarFechaValor(campos.FECHA_DE_CREACION_DEL_LOTE_ENCABEZADO, 'yyyyMMdd', '20160323', '<=');
			CALL validarNumericoValor(campos.CONSECUTIVO_DEL_DIA_ENCABEZADO, '0', '>');
			DECLARE listaValores ROW;
			SET listaValores.lista[] = LIST {ROW('01' AS OPC), ROW('02' AS OPC), ROW('05' AS OPC)};
			CALL compararListaValores(campos.MODALIDAD_DE_RECEPCION_ENVIO_DEL_ARCHIVO_ENCABEZADO, listaValores);
			CALL validarFechaValor(campos.FECHA_LIMITE_DE_RESPUESTA_ENCABEZADO, 'yyyyMMdd', NULL, NULL);
			CALL validarNumericoValor(campos.RESULTADO_DE_LA_OPERACION_ENCABEZADO, '0', '=');
			--validarNumericoValor(campos.DIAGNOSTICO_1_ENCABEZADO, '0', '=');
			--validarNumericoValor(campos.DIAGNOSTICO_2_ENCABEZADO, '0', '=');
			--validarNumericoValor(campos.DIAGNOSTICO_3_ENCABEZADO, '0', '=');
			--validarEspacios(campos.FILLER1_ENCABEZADO, TRUE);
			CALL validarNumericoValor(campos.IDENTIFICADOR_NOMBRE_DE_ARCHIVO_ENCABEZADO, '0', '=');
			--validarEspacios(campos.FILLER2_ENCABEZADO, TRUE);
		WHEN '02' THEN
			CALL compararValor(campos.IDENTIFICADOR_DEL_SERVICIO_DETALLE, '03');
			CALL validarNumericoValor(campos.CONSECUTIVO_DE_REGISTRO_DENTRO_DEL_LOTE_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.NSS_TRABAJADOR_DETALLE, NULL, NULL);
			--campos.RFC_TRABAJADOR_DETALLE
			--campos.CURP_TRABAJADOR_DETALLE
			--campos.NOMBRE_DETALLE
			CALL validarFechaValor(campos.PERIODO_DE_PAGO_QUE_ESTA_ENTERANDO_EL_PATRON_DETALLE, 'yyyyMM', '199701', '>=');
			CALL validarFechaValor(campos.FECHA_DE_PAGO_DETALLE, 'yyyyMMdd', NULL, NULL);
			CALL validarFechaValor(campos.FECHA_VALOR_RCV_DETALLE, 'yyyyMMdd', NULL, NULL);
			CALL validarFechaValor(campos.FECHA_VALOR_CUATRO_SEGUROS_IMSS_ACV_Y_VIVIENDA_DETALLE, 'yyyyMMdd', NULL, NULL);
			CALL validarNumericoValor(campos.ULTIMO_SALARIO_DIARIO_INTEGRADO_DEL_PERIODO_DETALLE, NULL, NULL);
			--campos.FOLIO_DE_PAGO_SUA_DETALLE
			--campos.REGISTRO_PATRONAL_IMSS_NRP_DETALLE
			--campos.REGISTRO_FEDERAL_DE_CONTRIBUYENTES_DEL_PATRON_RFC_DETALLE
			--campos.CLAVE_DE_ENTIDAD_RECEPTORA_DETALLE
			CALL validarNumericoValor(campos.DIAS_COTIZADOS_EN_EL_BIMESTRE_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.DIAS_DE_INCAPACIDAD_EN_EL_BIMESTRE_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.DIAS_DE_AUSENTISMO_EN_EL_BIMESTRE_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_RETIRO_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_ACTUALIZACION_Y_RECARGOS_DE_RETIRO_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_CESANTIA_Y_VEJEZ_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_ACTUALIZACION_Y_RECARGOS_DE_CESANTIA_Y_VEJEZ_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACION_VOLUNTARIA_DETALLE , NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACION_COMPLEMENTARIA_DE_RETIRO_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACION_PATRONAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_CUOTA_SOCIAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACION_ESTATAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACION_ESPECIAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_ACTUALIZACIONES_CUOTA_SOCIAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_ACTUALIZACIONES_APORTACION_ESTATAL_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_ACTUALIZACIONES_CUOTA_ESPECIAL_DETALLE, NULL, NULL);
			CALL compararValor(campos.FECHA_DE_PAGO_CUOTAS_GUBERNAMENTALES_DETALLE, '00010101');
			DECLARE listaValores ROW;
			SET listaValores.lista[] = LIST {ROW('0' AS OPC), ROW('1' AS OPC)};
			CALL compararListaValores(campos.IDENTIFICADOR_DE_VIVIENDA_EN_GARANTIA_DETALLE, listaValores);
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.VALOR_DE_LA_APLICACION_DE_INTERESES_DE_VIVIENDA_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_DEL_REMANENTE_DE_VIVIENDA_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_REMANENTE_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.INTERESES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.APLICACION_DE_INTERESES_DE_VIVIENDA_POR_PAGOS_EXTEMPORANEOS_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_DE_APORTACIONES_A_LARGO_PLAZO_DETALLE, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_DE_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_DETALLE, NULL, NULL);
			--campos.MOTIVO_DE_LIBERACION_DE_APORTACIONES_DETALLE
			--campos.FILLER_DETALLE
			--campos.RESULTADO_DE_LA_OPERACION_DETALLE
			--campos.DIAGNOSTICO_1_DETALLE
			--campos.DIAGNOSTICO_2_DETALLE
			--campos.DIAGNOSTICO_3_DETALLE
		WHEN '08' THEN
			CALL compararValor(campos.IDENTIFICADOR_DEL_SERVICIO_CUENTAS, '03');
			CALL validarEspacios(campos.IDENTIFICADOR_DE_PAGO_CUENTAS, FALSE);
			CALL validarNumericoValor(campos.IMPORTE_CUENTAS, NULL, NULL);
			CALL validarFechaValor(campos.FECHA_DE_LIQUIDACION_CUENTAS, 'yyyyMMdd', NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_APORTACIONES_ACEPTADAS_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_APORTACIONES_DEVUELTAS_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_CUENTAS, NULL, NULL);
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS, NULL, NULL);
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_POR_CONCEPTO_DE_REMANENTE_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ENVIADAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS, NULL, NULL);
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_ACEPTADAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS, '0', '=');
			CALL validarNumericoValor(campos.APLICACIONES_DE_INTERESES_DE_VIVIENDA_DEVUELTAS_POR_CONCEPTO_DE_PAGOS_EXTEMPORANEOS_CUENTAS, '0', '=');
			--campos.IDENTIFICADOR_DE_SIEFORE_CUENTAS
			--campos.TIPO_DE_SIEFORE_CUENTAS
			--campos.RESULTADO_DE_LA_OPERACION_CUENTAS
			--campos.DIAGNOSTICO_1_CUENTAS
			--campos.DIAGNOSTICO_2_CUENTAS
			--campos.DIAGNOSTICO_3_CUENTAS
			--campos.FILLER_CUENTAS
		WHEN '09' THEN
			CALL compararValor(campos.IDENTIFICADOR_DEL_SERVICIO_SUMARIO, '03');
			CALL compararValor(campos.IDENTIFICADOR_DE_OPERACION_SUMARIO, '10');
			CALL compararValor(campos.TIPO_ENTIDAD_ORIGEN_SUMARIO, '03');
			CALL compararValor(campos.CLAVE_ENTIDAD_ORIGEN_SUMARIO, '001');
			CALL compararValor(campos.TIPO_ENTIDAD_DESTINO_SUMARIO, '01');
			CALL compararValor(campos.CLAVE_ENTIDAD_DESTINO_SUMARIO, '534');
			CALL validarFechaValor(campos.FECHA_DE_CREACION_DE_LOTE_SUMARIO, 'yyyyMMdd', '20160322', '<=');
			CALL validarNumericoValor(campos.CONSECUTIVO_DEL_DIA_SUMARIO, '0', '>');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_RCV_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_RCV_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_APORTACIONES_VOLUNTARIAS_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_VOLUNTARIAS_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_APORTACIONES_COMPLEMENTARIAS_DE_RETIRO_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_COMPLEMENTARIAS_DE_RETIRO_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_APORTACIONES_A_LARGO_PLAZO_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_A_LARGO_PLAZO_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_APORTACIONES_A_UNA_SUBCUENTA_ADICIONAL_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_APORTACION_PATRONAL_5_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_APORTACION_PATRONAL_5_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_CUOTAS_GUBERNAMENTALES_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_INTERESES_CUOTAS_GUBERNAMENTALES_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.NUMERO_DE_REGISTROS_APORTACIONES_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.NUMERO_DE_REGISTROS_DE_CUENTAS_POR_PAGAR_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_CUENTA_POR_PAGAR_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_DE_VIVIENDA_EN_GARANTIA_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_DE_INTERESES_DE_VIVIENDA_EN_GARANTIA_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_DE_APORTACION_PATRONAL_5_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_EN_GARANTIA_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.IMPORTE_TOTAL_POR_CONCEPTO_DEL_REMANENTE_DE_VIVIENDA_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_REMANENTE_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.TOTAL_INTERESES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.TOTAL_DE_APLICACIONES_DE_INTERESES_DE_VIVIENDA_POR_PAGOS_EXTEMPORANEOS_SUMARIO, NULL, NULL);
			CALL validarNumericoValor(campos.TOTAL_INTERESES_EN_ACLARACIONES_GENERADOS_POR_PAGOS_EXTEMPORANEOS_DE_VIVIENDA_SUMARIO, '0', '=');
			CALL validarNumericoValor(campos.FILLER_SUMARIO, NULL, NULL);
	END CASE;
END;